{"version":3,"sources":["./src/app/scanning-test/scanning-test.component.ts","./src/app/scanning-test/scanning-test.component.html","./src/app/Services/bereich.service.ts","./src/app/Views/home/home.component.ts","./src/app/Views/home/home.component.html","./src/environments/environment.ts","./src/app/Services/authentication.service.ts","./src/app/Services/bereich.guard.ts","./src/app/Components/logout/logout.component.html","./src/app/Components/logout/logout.component.ts","./src/app/Views/login/login.component.ts","./src/app/Views/login/login.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/Views/team/team.component.ts","./src/app/Views/team/team.component.html","./src/app/Components/table/table.component.html","./src/app/Components/table/table.component.ts","./src/app/Views/select-bereich/select-bereich.component.ts","./src/app/Views/select-bereich/select-bereich.component.html","./src/app/Services/ktl.guard.ts","./src/app/Views/about/about.component.ts","./src/app/Views/about/about.component.html","./src/app/Views/contact/contact.component.ts","./src/app/Views/contact/contact.component.html","./src/app/app-routing.module.ts","./src/app/Components/remove-bereich/remove-bereich.component.html","./src/app/Components/remove-bereich/remove-bereich.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\ndeclare var fnScanDisable: any;\ndeclare var fnBarcodeScanned: any;\ndeclare var fnScanEnable: any;\n\n@Component({\n  selector: 'app-scanning-test',\n  templateUrl: './scanning-test.component.html',\n  styleUrls: ['./scanning-test.component.css']\n})\nexport class ScanningTestComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  quit() {\n    alert(\"quit\");\n    //EB.Application.quit();\n  }\n  navigate(){\n     alert(\"navigate\");\n    // window.location.href='./index.html'\n  }\n  fnScanEnable() {\n    alert('ScanEnable')\n    new fnScanEnable();\n    //EB.Barcode.enable({ allDecoders: true }, fnBarcodeScanned);\n    /*document.getElementById('scanData').value\n        = \"enabled: press HW trigger to capture.\";*/\n}\nfnBarcodeScanned(jsonObject: any) {\n  new fnBarcodeScanned(jsonObject);\n  console.log(\"Barcode Scanned:{\" + JSON.stringify(jsonObject) + \"}\");\n  /*document.getElementById('scanData').value = \"barcode: \" + jsonObject.data;*/\n}\n\n fnScanDisable() {\n   alert(\"ScanDisable\");\n   new fnScanDisable();\n  //EB.Barcode.disable();\n  //document.getElementById('scanData').value = \"disabled: press 'enable' to scan.\";\n}\n\n\n}\n","<HEAD>\n    <script type=\"text/javascript\" charset=\"utf-8\" src=\"./ebapi-modules.js\"></script>\n    <style>\n        h1 {\n            font-size: 2.5em;\n            background-color: lightgray;\n            margin: 5px;\n            padding: 5px;\n        }\n\n        button {\n            font-size: .5em;\n        }\n\n        input {\n            font-size: 1.3em;\n        }\n\n        #scanData {\n            width: 98%;\n            margin: 10px;\n        }\n    </style>\n</HEAD>\n\n<BODY>\n    <h1>Barcode\n        <button (click)=\"navigate()\">Home</button>\n        <button (click)=\"quit()\">Quit</button>\n    </h1>\n    <div id=content>\n        <input id=\"scanData\" type=text>\n        <input type=button value=\"Enable Scan\" (click)=\"fnScanEnable();\">\n        <input type=button value=\"Disable Scan\" (click)=\"fnScanDisable();\">\n    </div>\n</BODY>\n<SCRIPT>\n    \n    function fnScanEnable() {\n        console.log('TEST')\n        EB.Barcode.enable({ allDecoders: true }, fnBarcodeScanned);\n        document.getElementById('scanData').value\n            = \"enabled: press HW trigger to capture.\";\n    }\n\n    function fnBarcodeScanned(jsonObject) {\n        console.log(\"Barcode Scanned:{\" + JSON.stringify(jsonObject) + \"}\");\n        document.getElementById('scanData').value = \"barcode: \" + jsonObject.data;\n    }\n\n    function fnScanDisable() {\n        EB.Barcode.disable();\n        document.getElementById('scanData').value = \"disabled: press 'enable' to scan.\";\n    }\n\n\n</SCRIPT>","import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BereichService {\n\n\n  constructor() { }\n\n  bereiche = [\"Laden\", \"Etikettieren\", \"Kette/Abdichten\", \"Verpacken\", \"Kotfluegel\", \"Nacharbeit\"];\n  private bereich = new Subject<string | null>();\n\n  isSelected(): Observable<string | null> {\n    return this.bereich.asObservable();\n  }\n\n  updateBereich(selectedBereich: string | null) {\n    this.bereich.next(selectedBereich);\n  }\n\n  updateLocalStorage(selectedBereich: string) {\n    localStorage.setItem('bereich', selectedBereich);\n  }\n\n  removeLocalStorage() {\n    localStorage.removeItem('bereich');\n\n  }\n\n  getBereich() {\n    return localStorage.getItem('bereich');\n  }\n\n  checkBereich(bereich: string) {\n    if (this.bereiche.includes(bereich, 0))\n      return true;\n    else return false;\n  }\n\n  setBereich(bereich: string) {\n    if (this.checkBereich(bereich)) {\n      this.updateLocalStorage(bereich);\n      this.updateBereich(bereich);\n      return true;\n    }\n    else\n      return false\n  }\n\n  removeBereich(): void {\n    this.removeLocalStorage();\n    this.updateBereich(null);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  title = 'demo';\n  MyColumns = MyColumnsTest;\n  MySampleData = MySampleDataTest;\n}\n\n\n\n\nconst MyColumnsTest: string[] = ['Teil', 'Material', 'Gewicht', 'Herkunft'];\nexport interface PeriodicElement {\n  Material: string;\n  Teil: number;\n  Gewicht: number;\n  Herkunft: string;\n}\nconst MySampleDataTest: PeriodicElement[] = [\n  { Teil: 1, Material: 'Plastik', Gewicht: 1.0079, Herkunft: 'DE' },\n  { Teil: 2, Material: 'Eisen', Gewicht: 4.0026, Herkunft: 'DE' },\n  { Teil: 3, Material: 'Plastik', Gewicht: 6.941, Herkunft: 'DE' },\n  { Teil: 4, Material: 'Plastik', Gewicht: 9.0122, Herkunft: 'DE' },\n  { Teil: 5, Material: 'Eisen', Gewicht: 10.811, Herkunft: 'DE' },\n  { Teil: 6, Material: 'Eisen', Gewicht: 12.0107, Herkunft: 'DE' },\n  { Teil: 7, Material: 'Eisen', Gewicht: 14.0067, Herkunft: 'DE' },\n  { Teil: 8, Material: 'Eisen', Gewicht: 15.9994, Herkunft: 'DE' },\n  { Teil: 9, Material: 'Eisen', Gewicht: 18.9984, Herkunft: 'DE' },\n  { Teil: 10, Material: 'Eisen', Gewicht: 20.1797, Herkunft: 'DE' },\n];\n","<app-table [Data]=\"MySampleData\" [columnsName]=\"MyColumns\"></app-table>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\n\n\n@Injectable({\n   providedIn: 'root'\n})\nexport class AuthenticationService {\n   constructor() { }\n   private logger = new Subject<string | null>();\n\n   isLoggedIn(): Observable<string | null> {\n      return this.logger.asObservable();\n   }\n\n   updateLogger(username: string | null) {\n      this.logger.next(username);\n   }\n\n   updateLocalStorage(username: string, password: string) {\n      localStorage.setItem('username', username);\n      localStorage.setItem('password', password);\n   }\n\n   removeLocalStorage() {\n      localStorage.removeItem('username');\n      localStorage.removeItem('password');\n   }\n\n   getUsername() {\n      return localStorage.getItem('username');\n   }\n\n   checkCredentials(username: string, password: string) {\n      if ((username == 'user1' && password == 'user') || (username == 'user2' && password == 'user')) {\n         this.login(username, password);\n         return true;\n      }\n      else\n         return false\n   }\n   login(username: string, password: string): void {\n      this.updateLocalStorage(username, password);\n      this.updateLogger(username);\n   }\n\n   logout(): void {\n      this.removeLocalStorage();\n      this.updateLogger(null);\n   }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { BereichService } from './bereich.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BereichGuard implements CanActivate {\n  constructor(private bereichService: BereichService, private router: Router) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.checkBereich();\n  }\n  checkBereich(): true | UrlTree | any {\n    let val: string | any = this.bereichService.getBereich();\n    if (val != null) {\n      return true;\n    } else {\n      return this.router.navigate(['/selectbereich']);\n    }\n  }\n}\n","<div *ngIf=\"username\">\n  username: {{username}}\n  <form #form=\"ngForm\" (ngSubmit)=\"onClickLogout()\">\n    <input type=\"submit\" value=\"logout\">\n  </form>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { AuthenticationService } from '../../Services/authentication.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n  windowReload() {\n    window.location.reload();\n  }\n  username = this.authService.getUsername();\n  subscription: any;\n  constructor(private authService: AuthenticationService) { }\n\n  ngOnInit(): void {\n    this.subscription = this.authService.isLoggedIn()\n      .subscribe(user => this.username = user);\n  }\n  onClickLogout() {\n    this.authService.logout();\n    this.windowReload();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { AuthenticationService } from '../../Services/authentication.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  userName: string | any;\n  password: string | any;\n  formData: FormGroup | any;\n\n  constructor(private authService: AuthenticationService, private router: Router) { }\n  ErrorMessage = false;\n  ngOnInit(): void {\n    if (this.authService.getUsername !== null) {\n      this.router.navigate(['/teile']);\n    }\n    this.formData = new FormGroup({\n      userName: new FormControl(\"\"),\n      password: new FormControl(\"\"),\n    });\n\n  }\n  onClickSubmit(data: any) {\n    this.userName = data.userName;\n    this.password = data.password;\n\n    if (this.authService.checkCredentials(this.userName, this.password))\n      this.router.navigate(['/teile']);\n    else this.ErrorMessage = true;\n  }\n}\n","<div id=\"login\">\n   <h1>Anmeldung</h1>\n   <form [formGroup]=\"formData\" (ngSubmit)=\"onClickSubmit(formData.value)\" class=\"form-signin\">\n\n      <label for=\"inputUsername\">Benutzer</label>\n      <input type=\"text\" id=\"username\" formControlName=\"userName\" placeholder=\"Username\" required autofocus>\n      <label for=\"inputPassword\">Password</label>\n      <input type=\"password\" id=\"inputPassword\" formControlName=\"password\" placeholder=\"Password\" required>\n      <button type=\"submit\">Sign in</button>\n   </form>\n   <div *ngIf=\"ErrorMessage\" style=\"color: red\">\n      Benuter Unbekannt\n   </div>\n</div>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(private router: Router) { }\n  title = 'KTL-Scannersystem-Demo';\n\n}\n\n\n\n","<!-- Toolbar -->\n<div class=\"toolbar\" role=\"banner\">\n  <img width=\"40\" alt=\"VW Logo\" src=\"./assets/vw-logo.jpg\" />\n\n  <nav>\n    <ul>\n      <li> <a routerLink=\"/teile\" routerLinkActive=\"active\">Teile</a></li>\n      <li> <a routerLink=\"/team\" routerLinkActive=\"active\">Mitarbeiter</a></li>\n      <li><a routerLink=\"/contact\" routerLinkActive=\"active\">Contact</a></li>\n      <li><a routerLink=\"/about\" routerLinkActive=\"active\">About</a></li>\n    </ul>\n  </nav>\n\n  <div class=\"spacer\"></div>\n\n  <img width=\"40\" alt=\"MVI Logo\" src=\"./assets/mvi-proplant.jpg\" />\n\n</div>\n\n\n<!-- Status -->\n<div class=\"status\">\n  <app-remove-bereich class=\"remove-bereich\"></app-remove-bereich>\n\n  <div class=\"spacer\"></div>\n\n  <app-logout class=\"logout\"></app-logout>\n\n</div>\n\n\n<div class=\"content\" role=\"main\">\n\n  <!-- Highlight Card -->\n  <div class=\"card highlight-card card-small\">\n\n    <span>{{ title }} </span>\n\n  </div>\n\n</div>\n\n\n\n<router-outlet></router-outlet>\n\n\n<footer>\n  <p>Developed By: MVI-Proplant<br>\n    <a href=\"mailto:somename@mvi.com\">somename@mvi.com</a>\n  </p>\n</footer>\n\n\n<app-scanning-test></app-scanning-test>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './Views/login/login.component';\nimport { LogoutComponent } from './Components/logout/logout.component';\nimport { HomeComponent } from './Views/home/home.component';\nimport { SelectBereichComponent } from './Views/select-bereich/select-bereich.component';\nimport { RemoveBereichComponent } from './Components/remove-bereich/remove-bereich.component';\nimport { TableComponent } from './Components/table/table.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { TeamComponent } from './Views/team/team.component';\nimport { ContactComponent } from './Views/contact/contact.component';\nimport { AboutComponent } from './Views/about/about.component';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ScanningTestComponent } from './scanning-test/scanning-test.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    LogoutComponent,\n    HomeComponent,\n    SelectBereichComponent,\n    RemoveBereichComponent,\n    TableComponent,\n    TeamComponent,\n    ContactComponent,\n    AboutComponent,\n    ScanningTestComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTableModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-team',\n  templateUrl: './team.component.html',\n  styleUrls: ['./team.component.css']\n})\nexport class TeamComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  title = 'demo';\n  MyColumns = MyColumnsTest;\n  MySampleData = MySampleDataTest;\n}\n\n\n\n\nconst MyColumnsTest: string[] = ['MitarbeiterNR', 'Name', 'Vorname', 'Abteilung'];\nexport interface PeriodicElement {\n  Vorname: string;\n  MitarbeiterNR: number;\n  Name: string;\n  Abteilung: string;\n}\nconst MySampleDataTest: PeriodicElement[] = [\n  { MitarbeiterNR: 1, Vorname: 'Jan', Name: 'Kalo', Abteilung: 'Logistik' },\n  { MitarbeiterNR: 2, Vorname: 'Tilo', Name: 'Littmann', Abteilung: 'Personal' },\n  { MitarbeiterNR: 3, Vorname: 'Sabrina', Name: 'Steller', Abteilung: 'Logistik' },\n  { MitarbeiterNR: 4, Vorname: 'Josephin', Name: 'Nachname', Abteilung: 'Personal' },\n  { MitarbeiterNR: 5, Vorname: 'Christoph', Name: 'Nachname', Abteilung: 'Logistik' },\n  { MitarbeiterNR: 6, Vorname: 'Janus', Name: 'Nachname', Abteilung: 'Logistik' },\n  { MitarbeiterNR: 7, Vorname: 'Sara', Name: 'Nachname', Abteilung: 'Personal' },\n  { MitarbeiterNR: 8, Vorname: 'Sandra', Name: 'Nachname', Abteilung: 'Logistik' },\n  { MitarbeiterNR: 9, Vorname: 'Lina', Name: 'Nachname', Abteilung: 'Personal' },\n  { MitarbeiterNR: 10, Vorname: 'Monika', Name: 'Nachname', Abteilung: 'Logistik' },\n];","<app-table [Data]=\"MySampleData\" [columnsName]=\"MyColumns\"></app-table>","<table mat-table [dataSource]=\"Data\" class=\"mat-elevation-z8\">\n  <ng-container *ngFor=\"let disCol of columnsName; let colIndex = index\" matColumnDef=\"{{disCol}}\">\n    <th mat-header-cell *matHeaderCellDef>{{disCol}}</th>\n    <td mat-cell *matCellDef=\"let element\">{{element[disCol]}}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columnsName\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: columnsName;\"></tr>\n</table>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class TableComponent implements OnInit {\n\n  @Input() columnsName: String[] | any;\n  @Input() Data: Object[] | any;\n  title = \"dynamicTable\"\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { BereichService } from '../../Services/bereich.service';\n\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-select-bereich',\n  templateUrl: './select-bereich.component.html',\n  styleUrls: ['./select-bereich.component.css']\n})\nexport class SelectBereichComponent implements OnInit {\n\n  ErrorMessage = false;\n  bereich: string | any;\n  formData: FormGroup | any;\n\n  constructor(private bereichService: BereichService, private router: Router) { }\n\n  ngOnInit(): void {\n    if (this.bereichService.getBereich() != null) this.router.navigate(['/login']);\n    this.formData = new FormGroup({\n      bereich: new FormControl(\"\")\n    });\n  }\n  onClickSubmit(data: any) {\n    this.bereich = data.bereich;\n    if (this.bereichService.setBereich(this.bereich)) {\n      this.router.navigate(['/login']);\n    }\n    else this.ErrorMessage = true;\n  }\n\n\n}","<div id=\"setBereich\">\n   <h1>Zur Konfiguration, bitte Bereich eintragen!</h1>\n   <form [formGroup]=\"formData\" (ngSubmit)=\"onClickSubmit(formData.value)\" class=\"form-setBereich\">\n\n      <label for=\"inputBereich\">Bereich</label>\n      <input type=\"text\" id=\"bereich\" formControlName=\"bereich\" placeholder=\"Bereich\" required autofocus>\n      <button type=\"submit\">Eintragen</button>\n   </form>\n   <div *ngIf=\"ErrorMessage\" style=\"color: red\">\n      Bereich Unbekannt\n   </div>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n\nimport { AuthenticationService } from './authentication.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class KtlGuard implements CanActivate {\n  constructor(private authService: AuthenticationService, private router: Router) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.checkLogin();\n  }\n\n  checkLogin(): true | UrlTree | any {\n    let val: string | any = this.authService.getUsername() ? \"true\" : \"false\";\n\n    if (val != null && val == \"true\") {\n      return true;\n    } else {\n      return this.router.navigate(['/login']);\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"about\">\n    <h1>About:</h1>\n    <h3>\n        Bei VW Baunatal werden Originalteile und Kaufteile für viele VW Fahrzeuge vorbehandelt, KTL lackiert,\n        getrocknet, teilweise abgedichtet und anschließend Endkunden gerecht ver-packt. Bei diesem Prozess müssen\n        aktuell ca. 5000 Teilenummern gehandhabt werden.\n        Aufgrund dieser Vielzahl an Teilenummern, der damit verbundenen Verwechslungsgefahr und der manuellen Handhabung\n        von Teiledaten soll zur Prozessabsicherung ein Scanner-system eingeführt werden.\n    </h3>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"contact\">\n    <h1>kontakt:</h1>\n\n    <ul>\n        <li>\n            <h3>Fachlich-Support: _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ </h3>\n        </li>\n        <li>\n            <h3>IT-support: _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ </h3>\n        </li>\n        <li>\n            <h3>Entwickler: _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ </h3>\n        </li>\n    </ul>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './Views/login/login.component';\nimport { HomeComponent } from './Views/home/home.component';\nimport { KtlGuard } from './Services/ktl.guard';\nimport { SelectBereichComponent } from './Views/select-bereich/select-bereich.component';\nimport { BereichGuard } from './Services/bereich.guard';\nimport { TeamComponent } from './Views/team/team.component';\nimport { ContactComponent } from './Views/contact/contact.component';\nimport { AboutComponent } from './Views/about/about.component';\nconst routes: Routes = [\n  {\n    path: '', canActivate: [BereichGuard], children: [\n      { path: 'login', component: LoginComponent },\n      { path: 'teile', component: HomeComponent, canActivate: [KtlGuard] },\n      { path: 'team', component: TeamComponent, canActivate: [KtlGuard] },]\n  },\n  { path: 'selectbereich', component: SelectBereichComponent },\n  { path: 'contact', component: ContactComponent },\n  { path: 'about', component: AboutComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<div *ngIf=\"bereich\">\n    <p>Bereich: {{bereich}}</p>\n    <form #form=\"ngForm\" (ngSubmit)=\"onClickremoveBereich()\">\n        <input type=\"submit\" value=\"removebereich\">\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BereichService } from '../../Services/bereich.service';\nimport { AuthenticationService } from '../../Services/authentication.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-remove-bereich',\n  templateUrl: './remove-bereich.component.html',\n  styleUrls: ['./remove-bereich.component.css']\n})\nexport class RemoveBereichComponent implements OnInit {\n\n  windowReload() {\n    window.location.reload();\n  }\n  bereich = this.bereichService.getBereich();\n\n  subscription: any;\n\n  constructor(private bereichService: BereichService, private authService: AuthenticationService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.subscription = this.bereichService.isSelected()\n      .subscribe(b => this.bereich = b);\n  }\n  onClickremoveBereich() {\n    this.bereichService.removeBereich();\n    this.authService.logout();\n    this.windowReload();\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}